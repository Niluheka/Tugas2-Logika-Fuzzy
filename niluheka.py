# -*- coding: utf-8 -*-
"""niluheka.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16EN_5k1S25Meh1u0h_xLprQM41H35Yt-
"""

from IPython.display import Image

Image('gambar1.png')

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

import os

import warnings

warnings.filterwarnings('ignore')

data = 'k-means-result.csv'

df = pd.read_csv(data)

df.shape

df.head()

df.describe()

df.info()

df.isnull().sum()

df.dropna(inplace=True)

df.isnull().sum()

selected_columns = ['mobile', 'fixed']
X = df[selected_columns]
y = df['kota']

X.info()

X.head()

cols = X.columns

from sklearn.preprocessing import MinMaxScaler

ms = MinMaxScaler()

X = ms.fit_transform(X)

X = pd.DataFrame(X, columns=[cols])

X.head()

from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters=2, random_state=0)

kmeans.fit(X)

label_2 = kmeans.fit_predict(X)

kmeans.inertia_

kmeans.cluster_centers_

plt.scatter(X['mobile'], X['fixed'], c=kmeans.labels_)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], marker='x', color='red')
plt.xlabel('Mobile')
plt.ylabel('Broadband')
plt.title('K-Means Clustering K = 2')
plt.show()

inertia = []
for k in range(1, 16):
    kmeans = KMeans(n_clusters=k, random_state=0)
    kmeans.fit(X)
    inertia.append(kmeans.inertia_)

plt.plot(range(1, 16), inertia, marker='o')
plt.xlabel('Number of Clusters')
plt.ylabel('Inersia')
plt.title('Elbow Method')
plt.show()

kmeans = KMeans(n_clusters=4, random_state=0)

kmeans.fit(X)

label_4 = kmeans.fit_predict(X)

plt.scatter(X['mobile'], X['fixed'], c=kmeans.labels_)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], marker='x', color='red')
plt.xlabel('Mobile')
plt.ylabel('Broadband')
plt.title('K-Means Clustering K = 4')
plt.show()

df['k=2'] = label_2
df['k=4'] = label_4
print(df)
df.to_csv('k-means-result.csv', index=False)